events {
  worker_connections 1024;
}

http {
  # Redirect HTTP to HTTPS
  server {
    listen 80;
    server_name localhost;

    location / {
      return 301 https://$host$request_uri;
    }
  }

  # Main server block for your main app
  server {
    listen 443 ssl;
    server_name localhost;

    ssl_certificate /etc/nginx/certs/nginx.crt;
    ssl_certificate_key /etc/nginx/certs/nginx.key;

    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers 'ECDH+AESGCM:ECDH+AES:!aNULL:!MD5:!3DES';

    # Main location block for HTTPS
    location / {
      proxy_pass http://app:8800;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
    }
  }

  # Server block for Redis Insight
  server {
    listen 443 ssl;
    server_name redis.localhost;

    ssl_certificate /etc/nginx/certs/nginx.crt;
    ssl_certificate_key /etc/nginx/certs/nginx.key;

    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers 'ECDH+AESGCM:ECDH+AES:!aNULL:!MD5:!3DES';

    # Proxy settings for Redis Insight
    location / {
      proxy_pass http://redisinsight:5540;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
    }
  }

  # Server block for Grafana
  server {
    listen 443 ssl;
    server_name grafana.localhost;

    ssl_certificate /etc/nginx/certs/nginx.crt;
    ssl_certificate_key /etc/nginx/certs/nginx.key;

    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers 'ECDH+AESGCM:ECDH+AES:!aNULL:!MD5:!3DES';

    # Proxy settings for Grafana
    location / {
      proxy_pass http://grafana:3000;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
    }
  }
}
